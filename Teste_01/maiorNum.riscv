.data
str:
	.string "\n"
    .text
    .globl main

    main:


        # le o primeiro numero que corresponde a quantidade de numeros a serem lidos a seuir
        li a7, 5
        ecall
        mv t0, a0  # armazena essa quantidade em t0
        #printa a quebra de linha
	li a7, 4
	la a0, str
	ecall	

        # inicializa variável para o maior número
        li t1, -2147483648  # mior número possível em um inteiro de 32 bits

    loop:

        # le o numero
        li a7, 5
        
        ecall
        
        mv t2, a0  # Armazena o número em t2

        # Comparar com o maior número atual
        bgt t2, t1, update_max  # atualiza o maior número
        

        # se não der certo, volta ao loop
        j continue_loop

    update_max:
        mv t1, t2  # atualiza o maior número

    continue_loop:
        # Decrementar a quantidade de números restantes
        addi t0, t0, -1

        # Verificar se ainda há números a serem lidos
        bgtz t0, loop  # Se t0 > 0, voltar ao loop
        	#printa a quebra de linha
	li a7, 4
	la a0, str
	ecall	


        # Imprimir o maior número
        mv a0, t1
        li a7, 1
        ecall

        # Terminar o programa
        	#printa a quebra de linha
	li a7, 4
	la a0, str
	ecall	
        li a7, 10
        ecall